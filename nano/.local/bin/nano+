#!/bin/sh

# Usage: nano+ [ARG]...
#
# launch nano(1) with some options (if it has them) based on the terminal size:
# - if terminal is large enough, display line numbers        (Alt-N to toggle)
# - if terminal has <20 lines, don't show the bottom help    (Alt-X to toggle)
#
# also, if the 'mj' productivity system is installed:
# - in case there's no ARGument, launch nano with a filename such that the
#   buffer would be saved into mj's inbox.

#------------------------------------------------------------------------------

exists() { command -v "$@" > /dev/null; }

# nano_has OPTION
# returns zero if nano supports the given OPTION, non-zero otherwise
nano_has() { nano --help | grep -qF -- "$*" ; }

#------------------------------------------------------------------------------

INBOX=''
[ $# -eq 0 ] && exists mj-complete && INBOX=$(mj-complete -q :inbox)

[ -n "$COLUMNS" ] || COLUMNS=$(stty size | cut -f2 -d' ')
[ -n "$LINES" ]   || LINES=$(  stty size | cut -f1 -d' ')
# TODO/note: --linenumbers has been introduced in nano 2.7.1 [end 2016],
#            so maybe testing those options shouldn't be needed.
[ "$COLUMNS" -ge 68 ] && nano_has '--linenumbers' && set -- "$@" --linenumbers
[ "$LINES"   -lt 20 ] && nano_has '--nohelp'      && set -- "$@" --nohelp

# TODO/FIXME: we do not verify that filename doesn't exist
[ -d "$INBOX" ] && set -- "$@" "$INBOX/$(date +'%Y-%m-%d_untitled_%H%M%S')"

exec nano "$@"
